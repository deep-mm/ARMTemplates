{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namespaceName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the EventHub namespace"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "eventHubName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the EventHub"
      }
    },
    "eventHubSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [ "Basic", "Standard" ],
      "metadata": {
        "description": "Specifies the messaging tier for Event Hub Namespace."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
      },
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "workspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource identifier of Log Analytics."
      }
    },
    "diagnosticLogsRetentionInDays": {
      "type": "int",
      "defaultValue": 30,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely"
      }
    },
    "consumerGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource identifier of Log Analytics."
      }
    },
    "ipRules": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Array of IP Rules"
      }
    }
  },
  "variables": {
    "eventHubId": "[resourceId('Microsoft.EventHub/Namespaces/eventhubs', parameters('namespaceName'), parameters('eventHubName'))]",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "diagnosticsMetrics": [
      {
        "category": "AllMetrics",
        "timeGrain": null,
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      }
    ],
    "diagnosticsLogs": [
      {
        "category": "ArchiveLogs",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "OperationalLogs",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "AutoScaleLogs",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "KafkaCoordinatorLogs",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "KafkaUserErrorLogs",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "EventHubVNetConnectionEvent",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "CustomerManagedKeyUserLogs",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2018-01-01-preview",
      "name": "[parameters('namespaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "isAutoInflateEnabled": false
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('namespaceName'), '/', parameters('eventHubName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaceName'))]"
      ],
      "properties": {
        "messageRetentionInDays": 7,
        "partitionCount": 3
      },
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "$Default",
          "type": "consumergroups",
          "dependsOn": [ "[parameters('eventHubName')]" ],
          "properties": {
            "userMetadata": "User Metadata goes here"
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "cg-events",
          "type": "consumergroups",
          "dependsOn": [ "[parameters('eventHubName')]" ],
          "properties": {
            "userMetadata": "User Metadata goes here"
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "cg-exceptions",
          "type": "consumergroups",
          "dependsOn": [ "[parameters('eventHubName')]" ],
          "properties": {
            "userMetadata": "User Metadata goes here"
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "cg-traces",
          "type": "consumergroups",
          "dependsOn": [ "[parameters('eventHubName')]" ],
          "properties": {
            "userMetadata": "User Metadata goes here"
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "cg-metrics",
          "type": "consumergroups",
          "dependsOn": [ "[parameters('eventHubName')]" ],
          "properties": {
            "userMetadata": "User Metadata goes here"
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "cg-requests",
          "type": "consumergroups",
          "dependsOn": [ "[parameters('eventHubName')]" ],
          "properties": {
            "userMetadata": "User Metadata goes here"
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "[parameters('consumerGroupName')]",
          "type": "consumergroups",
          "dependsOn": [ "[parameters('eventHubName')]" ],
          "properties": {
            "userMetadata": "User Metadata goes here"
          }
        }
      ]
    },
    {
      "type": "Microsoft.EventHub/namespaces/providers/diagnosticsettings",
      "apiVersion": "2017-05-01-preview",
      "name": "[concat(parameters('namespaceName'), '/Microsoft.Insights/service')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaceName'))]"
      ],
      "properties": {
        "workspaceId": "[if(empty(parameters('workspaceId')), json('null'), parameters('workspaceId'))]",
        "metrics": "[variables('diagnosticsMetrics')]",
        "logs": "[variables('diagnosticsLogs')]"
      }
    },
    {
      "apiVersion": "2018-01-01-preview",
      "name": "[concat(parameters('namespaceName'), concat('/', 'default'))]",
      "type": "Microsoft.EventHub/namespaces/networkrulesets",
      "properties": {
        "ipRules": "[parameters('ipRules')]",
        "trustedServiceAccessEnabled": true,
        "defaultAction": "Deny"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('namespaceName'), '/',parameters('eventHubName'),'/SendListenPolicy')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaceName'), parameters('eventHubName'))]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaceName'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Send"
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('namespaceName'), '/',parameters('eventHubName'),'/ManagePolicy')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaceName'), parameters('eventHubName'))]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaceName'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Send",
          "Manage"
        ]
      }
    }
  ],
  "functions": [
  ],
  "outputs": {
    "namespaceName": {
      "type": "string",
      "value": "[parameters('namespaceName')]",
      "metadata": {
        "description": "The Name of the EventHub Namespace"
      }
    },
    "eventHubId": {
      "type": "string",
      "value": "[variables('eventHubId')]",
      "metadata": {
        "description": "The Resource Id of the EventHub Namespace"
      }
    },
    "namespaceResourceGroup": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The name of the Resource Group with the EventHub Namespace"
      }
    },
    "EventHubconnectionString": {
      "type": "string",
      "value": "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/eventhubs/authorizationRules'),parameters('namespaceName'),parameters('eventHubName'),'ManagePolicy'),'2015-08-01').primaryConnectionString]"
    },
    "EventHubSendListenconnectionString": {
      "type": "string",
      "value": "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/eventhubs/authorizationRules'),parameters('namespaceName'),parameters('eventHubName'),'SendListenPolicy'),'2015-08-01').primaryConnectionString]"
    }
  }
}
